name: Apply Infrastructure

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      environment:
        required: true
        type: string
      workspace:
        required: true
        type: string
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true
    outputs:
      sql:
        value: ${{ jobs.apply.outputs.sql }}
      sqldb:
        value: ${{ jobs.apply.outputs.sqldb }}
      app:
        value: ${{ jobs.apply.outputs.app }}

jobs:
  apply:
    name: Applying...
    runs-on: ubuntu-latest
    outputs:
      sql: ${{ steps.output.outputs.sql }}
      sqldb: ${{ steps.output.outputs.sqldb }}
      app: ${{ steps.output.outputs.app }}
    environment: ${{ inputs.environment }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    defaults:
      run:
        shell: pwsh
        working-directory: ./${{ inputs.project }}

    steps:
      - name: Installing Terraform...
        id: install-terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Checking out repository...
        id: checkout
        uses: actions/checkout@v3

      - name: Initializing...
        id: init
        run: |
          terraform init -no-color
      
      - name: Setting workspace...
        id: workspace
        run: |
          terraform workspace select ${{ inputs.workspace }}
      
      - name: Creating plan...
        id: plan
        run: |
          terraform plan -out=tfplan | Out-Null
          terraform show -no-color tfplan

      - name: Applying plan...
        id: apply
        run: |
          terraform apply -no-color -auto-approve tfplan

      - name: Setting outputs...
        id: output
        run: |
          sql=$(terraform output -json sql | sed 's/"//g')
          echo "sql=$sql" >> $GITHUB_OUTPUT
          sqldb=$(terraform output -json sqldb | sed 's/"//g')
          echo "sqldb=$sqldb" >> $GITHUB_OUTPUT
          app=$(terraform output -json app | sed 's/"//g')
          echo "app=$app" >> $GITHUB_OUTPUT
        shell: bash
